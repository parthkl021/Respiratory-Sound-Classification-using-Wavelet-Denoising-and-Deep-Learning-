
model = Sequential()
model.add(Conv1D(64, kernel_size=3, activation='relu', padding='same', input_shape=input_shape))
model.add(BatchNormalization())
model.add(Conv1D(96, kernel_size=3, activation='relu', padding='same'))
model.add(BatchNormalization())
model.add(Conv1D(128, kernel_size=3, activation='relu', padding='same'))
model.add(BatchNormalization())
model.add(Bidirectional(LSTM(128, return_sequences=True)))
model.add(Dropout(0.4))
model.add(TimeDistributed(Dense(128, activation='relu')))
model.add(Dropout(0.4))
model.add(TimeDistributed(Dense(3, activation='softmax')))
model.compile(loss='categorical_crossentropy', optimizer='Adam', metrics=['accuracy', 'Precision', 'Recall'])
early_stopping = EarlyStopping(monitor='val_loss', patience=3, verbose=1, mode='min')
model.fit(X_train, y_train_one_hot, batch_size=4, epochs=3, validation_split=0.2, callbacks=[early_stopping], verbose=1)

              precision    recall  f1-score   support

           I       0.73      0.67      0.70  10613966
           E       0.67      0.73      0.70   9643054
        None       1.00      1.00      1.00  13762980

    accuracy                           0.82  34020000
   macro avg       0.80      0.80      0.80  34020000
weighted avg       0.82      0.82      0.82  34020000

[[ 7090966  3515780     7220]
 [ 2626096  7013190     3768]


